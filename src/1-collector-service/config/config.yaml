service:
  name: "anomaly_detection_lstm_victoriametrics"
  version: "1.0"
  description: "Сервис для обнаружения аномалий в одномерных и многомерных временных рядах из VictoriaMetrics с использованием LSTM"

victoriametrics:
  url: "http://80.93.60.49:30429"  # URL VictoriaMetrics
  promql_queries:  # Список PROMQL-запросов для получения данных
    - name: "query_duration"
      query: 'max(vm_request_duration_seconds{job="vmsingle-monitoring-stack", instance="10.42.0.57:8429", quantile="0.99"}) by (path, instance) > 0'
      time_settings:
        # Вариант 1: Автоматический расчет (относительно текущего времени)
        auto_range:
          lookback_period: "20m"  # Период для запроса исторических данных
          step: "1m"
    - name: "query_duration_2"
      query: 'max(vm_request_duration_seconds{job="vmsingle-monitoring-stack", instance="10.42.0.57:8429", quantile="0.99"}) by (job, instance) > 0'
      time_settings:
        # Вариант 2: Фиксированный диапазон (укажите хотя бы один)
        fixed_range:
          start: "2025-07-11T07:36:20Z"  # Начало периода (ISO format)
          end: "2025-07-11T07:44:10Z"    # Конец периода (ISO format)
          step: "1m"                    # Можно переопределить шаг

data:
  output_path: "/app/data/output/metrics.csv"
  time_column: "timestamp"  # Название колонки с временными метками
  training_window: "7d"  # Временное окно для обучения модели
  window_size: 30  # Размер окна для создания последовательностей

models:
  - name: "cpu_usage_model"
    metric: "cpu_usage"  # Название метрики
    type: "LSTM"
    layers:
      - type: "LSTM"
        units: 64
        return_sequences: True
      - type: "LSTM"
        units: 32
        return_sequences: False
      - type: "Dense"
        units: 1
    loss: "mean_squared_error"
    active_version: 1
    optimizer: "adam"
    epochs: 50
    batch_size: 32
    validation_split: 0.2
    dropout: 0.2  # Dropout для предотвращения переобучения
    learning_rate: 0.001
    fit_every: 
    infer_every: 
    fit_window: 
    retrain:
      schedule: "24h"  # Переобучение каждые 24 часа
      drift_detection: True  # Переобучение при дрейфе данных
      validation_threshold: 0.1  # Порог ошибки для переобучения

  - name: "memory_usage_model"
    metric: "memory_usage"  # Название метрики
    type: "LSTM"
    layers:
      - type: "LSTM"
        units: 128
        return_sequences: True
      - type: "LSTM"
        units: 64
        return_sequences: False
      - type: "Dense"
        units: 1
    loss: "mean_absolute_error"
    optimizer: "rmsprop"
    active_version: 1
    epochs: 30
    batch_size: 64
    validation_split: 0.2
    dropout: 0.3
    learning_rate: 0.0005
    retrain:
      schedule: "12h"  # Переобучение каждые 12 часов
      drift_detection: True
      validation_threshold: 0.15

anomaly_detection:
  threshold: 3.0  # Порог для определения аномалий
  smoothing_window: 5  # Окно для сглаживания предсказаний

telegram:
  enabled: True
  bot_token: "YOUR_TELEGRAM_BOT_TOKEN"
  chat_id: "YOUR_TELEGRAM_CHAT_ID"
  message_template: "Обнаружена аномалия! Метрика: {metric}, Время: {timestamp}, Значение: {value}"

infrastructure:
  gpu_enabled: True
  workers: 4
  memory_limit: "8G"
  model_storage: "/models"  # Путь для сохранения моделей

monitoring:
  log_path: "/logs/anomaly_detection.log"
  metrics:
    - "mse"
    - "mae"
    - "anomaly_count"
  alerting:
    enabled: True
    threshold: 100

api:
  enabled: True
  host: "0.0.0.0"
  port: 8080
  endpoints:
    - "/predict"
    - "/health"